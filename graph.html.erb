<svg id="graph">
  <g transfrom="translate(100, 200) rotate(45)">
    <circle r=20 cx=50 cy=100 /> You can make self closing tags for svg things.
    r(radius) is default 0
    cx moves the center of the circle on the x axis to the right
    cy moves the center of the circle on the y axis down
    <rect width=200 height=100 x=400 y=300></rect>
    rect(rectangle)
    x moves top left corner on the x axis to the right
    y moves top left corner on the y axis down
    <line x1=200 x2=400 y1=400 y2=200></line>
    xs and ys are starting and ending points
    You must have stroke with color to see the line.
  </g>
  g(group)
  g does not show up.
  You can transform (move everything) inside the group with this.
  "translate"=move
  "rotate"=rotates around the upper left corner of the group, not the <svg>
  skew x and skew y to make a rhombus haha
</svg>

circle {
  fill: #ddfb35; makes inside background color
  stroke: black;
  stroke-width: 12px;
}

line {
  stroke: red;
  stroke-width: 2px;
}

path {

}

.tick {

}

Control flow will make the things that come later in the DOM(Document Object Model) on the top.
You don't need d3 for svg.


d3 is JavaScript/jQuery
You can select things with d3 in svg or outside of svg in the HTML.
d3.select("circle")
will select one
d3.selctAll("circle")
will select all
d3.select(this);

d3.select("svg").select("circle")
You can select things inside other selects
var circles = d3.selectAll("circle").style("fill", "red")
You can change the style of what you select.

var scale = d3.scale.linear();
If your values go up by 10, your pixels will move up the same next time your value goes up by 10.
Log is another option.
scale(20)
=>20
Domain is all possible values of x
Range is all possible values of y
Domain is the set of numbers(values) you put in, range is the set of numbers you want to get out
scale.domain([2000, 2012]);
scale(2000)
=>0
scale(2012)
=>1
scale(2005)
=> ~0.42
scale.range([50, 950]); so 2000=50px and 2012=950px
scale(2000);
=>50
scale(2007)
=> ~575


Atom plea
